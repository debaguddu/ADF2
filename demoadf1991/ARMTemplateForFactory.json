{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "demoadf1991"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"Destination_connection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Destination_connection'"
		},
		"Oracle1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Oracle1'"
		},
		"source_connection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'source_connection'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://mkeyvault1991.vault.azure.net/"
		},
		"Trigger7AM_properties_PL_INV_OLTP_to_ADLS_parameters_OLTP_DB_Name": {
			"type": "array",
			"defaultValue": [
				"PRODUCT",
				"VENDOR",
				"WAREHOUSE",
				"INVENTORY"
			]
		},
		"Trigger_Storage_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/c33cc9bf-fbce-404a-bc75-943789884ffb/resourceGroups/RG-Deba/providers/Microsoft.Storage/storageAccounts/azurestorage1991"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowJoin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Join",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmpData": {
										"InputFileName": "EmployeeData"
									},
									"DeptData": {
										"InputFileName": "DepartmentData"
									},
									"Destination": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-26T08:25:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_Join')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowUpsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Upsert_Using DF",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Upsert_Using DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empsrc": {
										"Schema_Name": "dbo",
										"Table_Name": "EMP_SRC"
									},
									"emptgt": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-18T14:32:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Upsert_Using DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ListOFEmployees')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EmployeeCopy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "DefaultSalary",
										"value": "10000.00"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmpName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DefaultSalary",
											"type": "String"
										},
										"sink": {
											"name": "EmpSal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 16
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EmpList",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "EmployeeCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "CompletionMessages",
							"value": {
								"value": "Successfully completed",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "EmployeeCopy",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ErrorMessage",
							"value": {
								"value": "@activity('EmployeeCopy').error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-16.northcentralus.logic.azure.com:443/workflows/a45a053354db43cca20ad6b56fe23136/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=fWPvYTA-OCP6BGuH1tgQJiC2n6RCgdcRB8Uwwx6CEoY",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"ErrorMessage\": \"@{variables('CompletionMessages')}\",\n    \"Pipeline\": \"@{pipeline().Pipeline}\",\n    \"RunId\": \"@{pipeline().RunId}\"\n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-16.northcentralus.logic.azure.com:443/workflows/a45a053354db43cca20ad6b56fe23136/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=fWPvYTA-OCP6BGuH1tgQJiC2n6RCgdcRB8Uwwx6CEoY",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"ErrorMessage\": \"@{variables('ErrorMessage')}\",\n    \"Pipeline\": \"@{pipeline().Pipeline}\",\n    \"RunId\": \"@{pipeline().RunId}\"\n}\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"CompletionMessages": {
						"type": "String"
					},
					"ErrorMessage": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-26T18:23:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EmpList')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ListOFEmployees_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "EmpList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stored procedure1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "CompletionMessages",
										"value": {
											"value": "Successfully completed",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stored procedure1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ErrorMessage",
										"value": {
											"value": "@activity('Stored procedure1').error.Message",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-16.northcentralus.logic.azure.com:443/workflows/a45a053354db43cca20ad6b56fe23136/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=fWPvYTA-OCP6BGuH1tgQJiC2n6RCgdcRB8Uwwx6CEoY",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n    \"ErrorMessage\": \"@{variables('CompletionMessages')}\",\n    \"Pipeline\": \"@{pipeline().Pipeline}\",\n    \"RunId\": \"@{pipeline().RunId}\"\n}\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Web2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set variable2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-16.northcentralus.logic.azure.com:443/workflows/a45a053354db43cca20ad6b56fe23136/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=fWPvYTA-OCP6BGuH1tgQJiC2n6RCgdcRB8Uwwx6CEoY",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n    \"ErrorMessage\": \"@{variables('ErrorMessage')}\",\n    \"Pipeline\": \"@{pipeline().Pipeline}\",\n    \"RunId\": \"@{pipeline().RunId}\"\n}\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Salary",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[emplistproc]",
										"storedProcedureParameters": {
											"EmpName": {
												"value": {
													"value": "@variables('EmpName')",
													"type": "Expression"
												},
												"type": "String"
											},
											"EmpSal": {
												"value": {
													"value": "@variables('DefaultSalary')",
													"type": "Expression"
												},
												"type": "Decimal"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EmpName",
										"value": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Salary",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DefaultSalary",
										"value": "5000.00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"CompletionMessages": {
						"type": "String"
					},
					"ErrorMessage": {
						"type": "String"
					},
					"DefaultSalary": {
						"type": "String"
					},
					"EmpName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-26T19:15:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EmpList')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetaData_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "In_ForEachCopy",
								"type": "DatasetReference",
								"parameters": {
									"SFile": "Customer.csv"
								}
							},
							"fieldList": [
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"size",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata2",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "MetaFolderTest",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"exists",
								"itemName",
								"itemType",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-18T14:32:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/In_ForEachCopy')]",
				"[concat(variables('factoryId'), '/datasets/MetaFolderTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Meta_ForEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Folder_MetaDetails",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Input_Csv_MetaData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach_CSV_Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.Value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy2Dest",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "In_ForEachCopy",
											"type": "DatasetReference",
											"parameters": {
												"SFile": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Out_CsvForEachCopy",
											"type": "DatasetReference",
											"parameters": {
												"TFile": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get File List",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Folder_MetaDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Folder_MetaDetails').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"File_List": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-18T12:09:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Input_Csv_MetaData')]",
				"[concat(variables('factoryId'), '/datasets/In_ForEachCopy')]",
				"[concat(variables('factoryId'), '/datasets/Out_CsvForEachCopy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Multi_function')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFromDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlSalesLT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Out_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy2Bkup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetFromDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_csv1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Out_csv_bkp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Bkup_Test",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetFromDB",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OutTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlSalesLT')]",
				"[concat(variables('factoryId'), '/datasets/Out_csv')]",
				"[concat(variables('factoryId'), '/datasets/In_csv1')]",
				"[concat(variables('factoryId'), '/datasets/Out_csv_bkp')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/OutTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ADLS_to_STAG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Source_Folder_Meta",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "GetMeta",
								"type": "DatasetReference",
								"parameters": {
									"Folder_check_location": {
										"value": "@pipeline().globalParameters.Folder_Path_Global",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachGetFolder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_Folders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_Folders').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Append_SubFolders",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Sub_Folders",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Filter_Folders",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get_Source_Folder_Meta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Source_Folder_Meta').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'Folder')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachSubFolder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEachGetFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Sub_Folders')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Sub_Folders": {
						"type": "Array",
						"defaultValue": []
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-10T17:06:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetMeta')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Append')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Input_Csv_MetaData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach_Item",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Append_Out",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "OutArray",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set_DISP_Array",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach_Item",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DispArray",
							"value": {
								"value": "@variables('OutArray')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"OutArray": {
						"type": "Array",
						"defaultValue": []
					},
					"DispArray": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Input_Csv_MetaData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SP_PLRUN_SELECT]",
								"storedProcedureParameters": {
									"PL_master": {
										"type": "String",
										"value": {
											"value": "Use_Case_Master",
											"type": "Expression"
										}
									},
									"PL_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SP_DB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(equals(activity('Lookup1').output.count,0),\n        and(greater(activity('Lookup1').output.count,0),\n                not(activity('Lookup1').output.value[0]['PLEnd'])))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Data 1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@variables('SRC_FLDR')",
													"type": "Expression"
												},
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "UC_CopyTest",
											"type": "DatasetReference",
											"parameters": {
												"Source_Folder": {
													"value": "@variables('SRC_FLDR')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "UC_Paste",
											"type": "DatasetReference",
											"parameters": {
												"Dest_Folder": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stored procedure Start1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SRC_FLDR",
										"value": "Source_Copy1"
									}
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Data 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SP_PLRUN_END]",
										"storedProcedureParameters": {
											"PL_master": {
												"value": {
													"value": "Use_Case_Master",
													"type": "Expression"
												},
												"type": "String"
											},
											"PL_name": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Stored procedure Start1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SP_PLRUN_START]",
										"storedProcedureParameters": {
											"PL_master": {
												"value": "Use_Case_Master",
												"type": "String"
											},
											"PL_name": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"SRC_FLDR": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SP_DB')]",
				"[concat(variables('factoryId'), '/datasets/UC_CopyTest')]",
				"[concat(variables('factoryId'), '/datasets/UC_Paste')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SP_PLRUN_SELECT]",
								"storedProcedureParameters": {
									"PL_master": {
										"type": "String",
										"value": {
											"value": "Use_Case_Master",
											"type": "Expression"
										}
									},
									"PL_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SP_DB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "If Condition2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(equals(activity('Lookup2').output.count,0),\n        and(greater(activity('Lookup2').output.count,0),\n                not(activity('Lookup2').output.value[0]['PLEnd'])))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Data 2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@variables('SRC_FLDR')",
													"type": "Expression"
												},
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "UC_CopyTest",
											"type": "DatasetReference",
											"parameters": {
												"Source_Folder": {
													"value": "@variables('SRC_FLDR')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "UC_Paste",
											"type": "DatasetReference",
											"parameters": {
												"Dest_Folder": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stored procedure Start2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SRC_FLDR",
										"value": "Source_Copy2"
									}
								},
								{
									"name": "Stored procedure2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Data 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SP_PLRUN_END]",
										"storedProcedureParameters": {
											"PL_master": {
												"value": {
													"value": "Use_Case_Master",
													"type": "Expression"
												},
												"type": "String"
											},
											"PL_name": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Stored procedure Start2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SP_PLRUN_START]",
										"storedProcedureParameters": {
											"PL_master": {
												"value": "Use_Case_Master",
												"type": "String"
											},
											"PL_name": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"SRC_FLDR": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SP_DB')]",
				"[concat(variables('factoryId'), '/datasets/UC_CopyTest')]",
				"[concat(variables('factoryId'), '/datasets/UC_Paste')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPY3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SP_PLRUN_SELECT]",
								"storedProcedureParameters": {
									"PL_master": {
										"type": "String",
										"value": {
											"value": "Use_Case_Master",
											"type": "Expression"
										}
									},
									"PL_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SP_DB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(equals(activity('Lookup3').output.count,0),\n        and(greater(activity('Lookup3').output.count,0),\n                not(activity('Lookup3').output.value[0]['PLEnd'])))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Data 3",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@variables('SRC_FLDR')",
													"type": "Expression"
												},
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "UC_CopyTest",
											"type": "DatasetReference",
											"parameters": {
												"Source_Folder": {
													"value": "@variables('SRC_FLDR')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "UC_Paste",
											"type": "DatasetReference",
											"parameters": {
												"Dest_Folder": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stored procedure Start3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SRC_FLDR",
										"value": "Source_Copy3"
									}
								},
								{
									"name": "Stored procedure3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Data 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SP_PLRUN_END]",
										"storedProcedureParameters": {
											"PL_master": {
												"value": {
													"value": "Use_Case_Master",
													"type": "Expression"
												},
												"type": "String"
											},
											"PL_name": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Stored procedure Start3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SP_PLRUN_START]",
										"storedProcedureParameters": {
											"PL_master": {
												"value": "Use_Case_Master",
												"type": "String"
											},
											"PL_name": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"SRC_FLDR": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SP_DB')]",
				"[concat(variables('factoryId'), '/datasets/UC_CopyTest')]",
				"[concat(variables('factoryId'), '/datasets/UC_Paste')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DELETE_ACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete_File",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Blob_Delete",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "Destination_connection",
									"type": "LinkedServiceReference"
								},
								"path": "destination-container/delete-logging"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Blob_Delete')]",
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DELTA_EXTRACTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY_DELTA_EXT_FRM_SRC",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set_STTIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM dbo.CUST_SRC \nWHERE FORMAT(UPDT_TSTAMP,'yyyyMMddHHmmss') >= \n@{activity('Lookup_Last_Run_Datetime').output.firstRow.MSTIME}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Read_From_Table",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dbo",
									"TableName": "CUST_SRC"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_DataSet",
								"type": "DatasetReference",
								"parameters": {
									"Dest_Name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"DestFileName": {
										"value": "@concat('Cust_T',formatDateTime(utcnow(),'hhmmss'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup_Last_Run_Datetime",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ISNULL(MAX(FORMAT(START_TIME,'yyyyMMddHHmmss')),'20170101010000') AS MSTIME FROM dbo.ETLLOGEXT\n\tWHERE PL_NAME = 'PL_DELTA_EXTRACTION' AND OBJ_NAME = 'CUST_SRC' AND STAT = 'SUCCESS'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Read_From_Table",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "DBO",
									"TableName": "ETLLOGEXT"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "INSERT_STATUS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "COPY_DELTA_EXT_FRM_SRC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_ETLLOGEXT]",
							"storedProcedureParameters": {
								"ENDATE": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"OBJNAME": {
									"value": "CUST_SRC",
									"type": "String"
								},
								"PLNAME": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"STATUS": {
									"value": "SUCCESS",
									"type": "String"
								},
								"STDATE": {
									"value": {
										"value": "@variables('STTIME')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_STTIME",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Run_Datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "STTIME",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"STTIME": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-20T19:41:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Read_From_Table')]",
				"[concat(variables('factoryId'), '/datasets/Destination_DataSet')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DataBricks_removeDuplicate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "removeDuplicate",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/debaranjan1991@outlook.com/Notebook_deleteDuplicate"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-13T12:20:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DataCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataCopy_Process",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Valid_File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Dataset",
								"type": "DatasetReference",
								"parameters": {
									"SRC_file": {
										"value": "@pipeline().parameters.InFile",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_DataSet",
								"type": "DatasetReference",
								"parameters": {
									"Dest_Name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"DestFileName": {
										"value": "@pipeline().parameters.OutFile",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Valid_File",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Source_Dataset",
								"type": "DatasetReference",
								"parameters": {
									"SRC_file": {
										"value": "@pipeline().parameters.InFile",
										"type": "Expression"
									}
								}
							},
							"timeout": "7.00:00:00",
							"sleep": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"InFile": {
						"type": "string",
						"defaultValue": "username1.csv"
					},
					"OutFile": {
						"type": "string",
						"defaultValue": "username.csv"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_Dataset')]",
				"[concat(variables('factoryId'), '/datasets/Destination_DataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Databricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ADBNotebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/debaranjan1991@outlook.com/Notebook1"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ADBNotebook2",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ADBNotebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/debaranjan1991@outlook.com/Notebook2"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-04T05:14:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FILTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Folder_MetaDetails",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Input_Csv_MetaData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter_CSVFile",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Folder_MetaDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Folder_MetaDetails').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach_CSV_Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_CSVFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_CSVFile').output.Value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy2Dest",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "In_ForEachCopy",
											"type": "DatasetReference",
											"parameters": {
												"SFile": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Out_CsvForEachCopy",
											"type": "DatasetReference",
											"parameters": {
												"TFile": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Input_Csv_MetaData')]",
				"[concat(variables('factoryId'), '/datasets/In_ForEachCopy')]",
				"[concat(variables('factoryId'), '/datasets/Out_CsvForEachCopy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FORLOOP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_Loop",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Input_For",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy_inside_for",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlTable_For",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedForEach",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Input_For": {
						"type": "array",
						"defaultValue": [
							"Customer",
							"Product",
							"ProductCategory"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:56:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_For')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedForEach')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INV_OLTP_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unload_ProductTable",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.OLTP_DB_Name,variables('Product'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Product_Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Inv_OracleTable",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Name": {
													"value": "@variables('Schema_Name')",
													"type": "Expression"
												},
												"Table_Name": {
													"value": "@concat(variables('Product'),'_DETAILS')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Inv_Copy_Table",
											"type": "DatasetReference",
											"parameters": {
												"File_Path": {
													"value": "@concat(pipeline().globalParameters.Folder_Path_Global,\n                variables('Product'),'/',\n                formatDateTime(utcnow(),'yyyy'),'/',\n                formatDateTime(utcnow(),'MM'),'/',\n                formatDateTime(utcnow(),'dd'),'/')",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@concat(variables('Product'),\n               formatDateTime(utcnow(),'HHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Unload_VendorTable",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Unload_ProductTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.OLTP_DB_Name,variables('Vendor'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Vendor_Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Inv_OracleTable",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Name": {
													"value": "@variables('Schema_Name')",
													"type": "Expression"
												},
												"Table_Name": {
													"value": "@concat(variables('Vendor'),'_DETAILS')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Inv_Copy_Table",
											"type": "DatasetReference",
											"parameters": {
												"File_Path": {
													"value": "@concat(pipeline().globalParameters.Folder_Path_Global,\n                variables('Vendor'),'/',\n                formatDateTime(utcnow(),'yyyy'),'/',\n                formatDateTime(utcnow(),'MM'),'/',\n                formatDateTime(utcnow(),'dd'),'/')",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@concat(variables('Vendor'),\n               formatDateTime(utcnow(),'HHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Unload_WarehouseTable",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Unload_VendorTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.OLTP_DB_Name,variables('Warehouse'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Warehouse_Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Inv_OracleTable",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Name": {
													"value": "@variables('Schema_Name')",
													"type": "Expression"
												},
												"Table_Name": {
													"value": "@concat(variables('Warehouse'),'_DETAILS')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Inv_Copy_Table",
											"type": "DatasetReference",
											"parameters": {
												"File_Path": {
													"value": "@concat(pipeline().globalParameters.Folder_Path_Global,\n                variables('Warehouse'),'/',\n                formatDateTime(utcnow(),'yyyy'),'/',\n                formatDateTime(utcnow(),'MM'),'/',\n                formatDateTime(utcnow(),'dd'),'/')",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@concat(variables('Warehouse'),\n               formatDateTime(utcnow(),'HHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Unload_Inv_Fact",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Unload_WarehouseTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.OLTP_DB_Name,variables('Inventory'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Inv_Fact",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Inv_OracleTable",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Name": {
													"value": "@variables('Schema_Name')",
													"type": "Expression"
												},
												"Table_Name": {
													"value": "@concat(variables('Inventory'),'_FACT')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Inv_Copy_Table",
											"type": "DatasetReference",
											"parameters": {
												"File_Path": {
													"value": "@concat(pipeline().globalParameters.Folder_Path_Global,\n                variables('Inventory'),'/',\n                formatDateTime(utcnow(),'yyyy'),'/',\n                formatDateTime(utcnow(),'MM'),'/',\n                formatDateTime(utcnow(),'dd'),'/')",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@concat(variables('Inventory'),\n               formatDateTime(utcnow(),'HHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OLTP_DB_Name": {
						"type": "array",
						"defaultValue": []
					}
				},
				"variables": {
					"Product": {
						"type": "String",
						"defaultValue": "PRODUCT"
					},
					"Vendor": {
						"type": "String",
						"defaultValue": "VENDOR"
					},
					"Warehouse": {
						"type": "String",
						"defaultValue": "WAREHOUSE"
					},
					"Schema_Name": {
						"type": "String",
						"defaultValue": "HR"
					},
					"Inventory": {
						"type": "String",
						"defaultValue": "INVENTORY"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-10T17:06:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Inv_OracleTable')]",
				"[concat(variables('factoryId'), '/datasets/Inv_Copy_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LogicApp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Emil_send",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-16.northcentralus.logic.azure.com:443/workflows/a45a053354db43cca20ad6b56fe23136/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=fWPvYTA-OCP6BGuH1tgQJiC2n6RCgdcRB8Uwwx6CEoY",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat(\n'{',\n    '\"Pipeline\": ','\"pipeline().Pipeline\",',\n    '\"RunId\": ','\"pipeline().RunId\"',\n'}'\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-18T14:32:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORACLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "OracleTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Lookup1').output.count,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ora2Blob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "OracleTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Destination_DataSet",
											"type": "DatasetReference",
											"parameters": {
												"Dest_Name": {
													"value": "@concat(pipeline().Pipeline,'/',\n                formatdatetime(utcnow(),'yyyy'),'/',\n                formatdatetime(utcnow(),'MM'),'/',\n                formatdatetime(utcnow(),'dd'))\n",
													"type": "Expression"
												},
												"DestFileName": {
													"value": "@concat('Output_T',\n                formatdatetime(utcnow(),'hhmmss'),\n                '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-16T04:13:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OracleTable1')]",
				"[concat(variables('factoryId'), '/datasets/Destination_DataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STORE_PROC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SP_GET_LOOKUP]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SP_DB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter_Active_Columns",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "SP_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SP_Lookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Act,True)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach_TABLE",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_Active_Columns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SP_Lookup').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set_TableName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TableName",
										"value": {
											"value": "@replace(item().TabName,' ','')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set SchemeName",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_TableName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SchemaName",
										"value": {
											"value": "@replace(item().schemaName,' ','')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_Table",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set SchemeName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Read_From_Table",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@variables('SchemaName')",
													"type": "Expression"
												},
												"TableName": {
													"value": "@variables('TableName')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Destination_DataSet",
											"type": "DatasetReference",
											"parameters": {
												"Dest_Name": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"DestFileName": {
													"value": "@concat(variables('SchemaName'),'_',variables('TableName'),formatdatetime(utcnow(),'yyyyMMddHHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SP_EXEC_Success",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy_Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SP_REC_0_SUCCESS]",
										"storedProcedureParameters": {
											"TABLE_NAME": {
												"value": {
													"value": "@variables('TableName')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SP_EXEC_Failure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy_Table",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SP_REC_0_FAILURE]",
										"storedProcedureParameters": {
											"TABLE_NAME": {
												"value": {
													"value": "@variables('TableName')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"TableName": {
						"type": "String"
					},
					"SchemaName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SP_DB')]",
				"[concat(variables('factoryId'), '/datasets/Read_From_Table')]",
				"[concat(variables('factoryId'), '/datasets/Destination_DataSet')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TABLE_LOOKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Table_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Read_From_Table",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dbo",
									"TableName": "LookupTable"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter_Active_Columns",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Table_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Table_Lookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Act,True)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachTableName",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_Active_Columns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_Active_Columns').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy_Table",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Table_Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Read_From_Table",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@variables('Schema_Name')",
													"type": "Expression"
												},
												"TableName": {
													"value": "@variables('Table_Name')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Destination_DataSet",
											"type": "DatasetReference",
											"parameters": {
												"Dest_Name": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"DestFileName": {
													"value": "@concat(variables('Schema_Name'),'_',variables('Table_Name'),formatdatetime(utcnow(),'yyyyMMddHHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set Schema_Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Schema_Name",
										"value": {
											"value": "@replace(item().schemaName,' ','')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Table_Name",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Schema_Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table_Name",
										"value": {
											"value": "@replace(item().TabName,' ','')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Schema_Name": {
						"type": "String"
					},
					"Table_Name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Read_From_Table')]",
				"[concat(variables('factoryId'), '/datasets/Destination_DataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TEST_Trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-10T17:22:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Test_DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-22T08:36:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Test_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TestFile_Flatten')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "TestFileFlatten",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Split and set list of Subjects",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SubjectList",
										"value": {
											"value": "@split(item().Subjects,';')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Split and set list of Subjects",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[InsertStudentSubject]",
										"storedProcedureParameters": {
											"StuName": {
												"value": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"type": "String"
											},
											"Sub1": {
												"value": {
													"value": "@variables('SubjectList')[0]",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Sub2": {
												"value": {
													"value": "@variables('SubjectList')[1]",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Sub3": {
												"value": {
													"value": "@variables('SubjectList')[2]",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Sub4": {
												"value": {
													"value": "@variables('SubjectList')[3]",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TestFileFlatten",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"itemType",
								"size",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"SubjectList": {
						"type": "Array",
						"defaultValue": []
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-27T03:32:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TestFileFlatten')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Unzip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "GetZipFiles",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "*.zip"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Unzip and Copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings"
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "GetZipFiles",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "UnZipTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-27T05:21:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetZipFiles')]",
				"[concat(variables('factoryId'), '/datasets/UnZipTarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_UseCase1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MetaData_Inbound",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Inbound_Location",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach_Child",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "MetaData_Inbound",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('MetaData_Inbound').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Append_Array",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Date_Array",
										"value": {
											"value": "@int(substring(item().name,4,8))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set_DateArray",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach_Child",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Disp_Date_Array",
							"value": {
								"value": "@variables('Date_Array')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set_Max_Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set_DateArray",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Max_Date",
							"value": {
								"value": "@string(max(variables('Date_Array')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy2Dest",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set_Max_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InCopy",
								"type": "DatasetReference",
								"parameters": {
									"InFile": {
										"value": "@concat('EMP_',variables('Max_Date'),'.csv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Out_Copy",
								"type": "DatasetReference",
								"parameters": {
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"OutFile": {
										"value": "@concat('EMP_DT',variables('Max_Date'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Date_Array": {
						"type": "Array"
					},
					"Max_Date": {
						"type": "String"
					},
					"Disp_Date_Array": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Inbound_Location')]",
				"[concat(variables('factoryId'), '/datasets/InCopy')]",
				"[concat(variables('factoryId'), '/datasets/Out_Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Wait_Git')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait_Test",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-10T17:06:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_excel2DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyToTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [New_Table].[Financial]",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_excel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/In_excel1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Query_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OutTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/OutTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Set_Var_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy data1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Target",
							"value": "xyz.csv"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_ForEachCopy",
								"type": "DatasetReference",
								"parameters": {
									"SFile": {
										"value": "@variables('Source')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Out_CsvForEachCopy",
								"type": "DatasetReference",
								"parameters": {
									"TFile": {
										"value": "@variables('Target')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_ForEachCopy",
								"type": "DatasetReference",
								"parameters": {
									"SFile": {
										"value": "@variables('Source')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Out_CsvForEachCopy",
								"type": "DatasetReference",
								"parameters": {
									"TFile": {
										"value": "@variables('Target')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Source": {
						"type": "String",
						"defaultValue": "username-password-recovery-code.csv"
					},
					"Target": {
						"type": "String",
						"defaultValue": "abc.csv"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/In_ForEachCopy')]",
				"[concat(variables('factoryId'), '/datasets/Out_CsvForEachCopy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "Destination_connection",
										"type": "LinkedServiceReference"
									},
									"path": "destination-container/TestLog"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['driverId']"
										},
										"sink": {
											"name": "driverId"
										}
									},
									{
										"source": {
											"path": "$['driverRef']"
										},
										"sink": {
											"name": "driverRef"
										}
									},
									{
										"source": {
											"path": "$['number']"
										},
										"sink": {
											"name": "number"
										}
									},
									{
										"source": {
											"path": "$['code']"
										},
										"sink": {
											"name": "code"
										}
									},
									{
										"source": {
											"path": "$['name']['forename']"
										},
										"sink": {
											"name": "forename"
										}
									},
									{
										"source": {
											"path": "$['name']['surname']"
										},
										"sink": {
											"name": "surname"
										}
									},
									{
										"source": {
											"path": "$['dob']"
										},
										"sink": {
											"name": "dob"
										}
									},
									{
										"source": {
											"path": "$['nationality']"
										},
										"sink": {
											"name": "nationality"
										}
									},
									{
										"source": {
											"path": "$['url']"
										},
										"sink": {
											"name": "url"
										}
									}
								],
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Table_Metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Det_Table_Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Read_From_Table",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.Schema_Name",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							]
						}
					},
					{
						"name": "IF Exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Det_Table_Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Det_Table_Metadata').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyTable",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Read_From_Table",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@pipeline().parameters.Schema_Name",
													"type": "Expression"
												},
												"TableName": {
													"value": "@pipeline().parameters.Table_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Destination_DataSet",
											"type": "DatasetReference",
											"parameters": {
												"Dest_Name": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"DestFileName": {
													"value": "@concat(pipeline().parameters.Schema_Name,pipeline().parameters.Table_Name,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Schema_Name": {
						"type": "string",
						"defaultValue": "SalesLT"
					},
					"Table_Name": {
						"type": "string",
						"defaultValue": "Address"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Read_From_Table')]",
				"[concat(variables('factoryId'), '/datasets/Destination_DataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Use_Case_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_COPY1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_COPY2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_COPY3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Stored procedure Delete",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute Pipeline3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_PLRUN_DELETE]",
							"storedProcedureParameters": {
								"PL_master": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_COPY1')]",
				"[concat(variables('factoryId'), '/pipelines/PL_COPY2')]",
				"[concat(variables('factoryId'), '/pipelines/PL_COPY3')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/excel2DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyToTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [New_Table].[Financial]",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "Destination_connection",
										"type": "LinkedServiceReference"
									},
									"path": "destination-container/ErrorLog"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_excel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-20T10:35:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/In_excel1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "username",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "username",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " uid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "uid",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "fname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "lname",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Userid",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTableUserId",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\tDELETE FROM USER_ID WHERE UNIQUR_ID IN (\n\tSELECT UNIQUR_ID FROM\t\n\t\t(SELECT username,uid,fname,lname,UNIQUR_ID, ROW_NUMBER() OVER(PARTITION BY username,uid,fname,lname ORDER BY UID) AS RNUM\n\t\t\tFROM USER_ID ) AS TAB1 WHERE RNUM > 1);\nSELECT 1 FROM USER_ID ;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-13T12:20:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Userid')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTableUserId')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/split')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Output",
							"value": {
								"value": "@split(variables('Input'),',')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Input": {
						"type": "String",
						"defaultValue": "\"123,456,789,000\""
					},
					"Output": {
						"type": "Array",
						"defaultValue": []
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_dest_conn')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_excel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Out_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/In_excel1')]",
				"[concat(variables('factoryId'), '/datasets/Out_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "New_Table",
					"table": "Financial"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmpName",
						"type": "varchar"
					},
					{
						"name": "EmpSal",
						"type": "decimal",
						"precision": 16,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmpTest"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableUserId')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "username",
						"type": "varchar"
					},
					{
						"name": "uid",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "fname",
						"type": "varchar"
					},
					{
						"name": "lname",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "USER_ID"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_For')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Delete')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "username1.csv",
						"folderPath": "Source_CSV",
						"container": "source-container"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedForEach')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().FileName,'.csv')",
							"type": "Expression"
						},
						"folderPath": "ForEach",
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AddressID",
						"type": "String"
					},
					{
						"name": "AddressLine1",
						"type": "String"
					},
					{
						"name": "AddressLine2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "StateProvince",
						"type": "String"
					},
					{
						"name": "CountryRegion",
						"type": "String"
					},
					{
						"name": "PostalCode",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Company_Data_TEST",
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Testout.csv",
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_DataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Dest_Name": {
						"type": "string"
					},
					"DestFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().DestFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Dest_Name",
							"type": "Expression"
						},
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmpList')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Emp_List.csv",
						"folderPath": "List of Employees",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmpSRCDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema_Name": {
						"type": "string"
					},
					"Table_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ECD",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ENAME",
						"type": "varchar"
					},
					{
						"name": "SAL",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMP_SRC"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmpTGTDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ECD",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ENAME",
						"type": "varchar"
					},
					{
						"name": "SAL",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMP_TGT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Emp_Dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Company_Data_TEST",
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "EmployeeName",
						"type": "String"
					},
					{
						"name": "EmployeeSalary",
						"type": "String"
					},
					{
						"name": "EmployeeDepartment",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMeta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Folder_check_location": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Folder_check_location",
							"type": "Expression"
						},
						"container": "inventory-datawerehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetZipFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "ZipFiles",
						"container": "source-container"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/INVFilestoSTAG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Path_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Path_Name",
							"type": "Expression"
						},
						"container": "inventory-datawerehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InCopy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"InFile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().InFile",
							"type": "Expression"
						},
						"folderPath": "Inbound_Folder",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPID",
						"type": "String"
					},
					{
						"name": "EMPNAME",
						"type": "String"
					},
					{
						"name": "SAL",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/In_ForEachCopy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SFile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().SFile",
							"type": "Expression"
						},
						"folderPath": "Source_Table_Data",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "NameStyle",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "PasswordHash",
						"type": "String"
					},
					{
						"name": "PasswordSalt",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/In_csv1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "username.csv",
						"folderPath": "Source_CSV",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Username; Identifier;First name;Last name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/In_excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Financial Sample.xlsx",
						"folderPath": "Source_EXCEL",
						"container": "source-container"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "Discount Band",
						"type": "String"
					},
					{
						"name": "Units Sold",
						"type": "String"
					},
					{
						"name": "Manufacturing Price",
						"type": "String"
					},
					{
						"name": "Sale Price",
						"type": "String"
					},
					{
						"name": "Gross Sales",
						"type": "String"
					},
					{
						"name": "Discounts",
						"type": "String"
					},
					{
						"name": " Sales",
						"type": "String"
					},
					{
						"name": "COGS",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Month Number",
						"type": "String"
					},
					{
						"name": "Month Name",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inbound_Location')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Inbound_Folder",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Input_Csv_MetaData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Source_Table_Data",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Input_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"InputFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().InputFileName,'.csv')",
							"type": "Expression"
						},
						"folderPath": "Company_Data_TEST",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "101",
						"type": "String"
					},
					{
						"name": "AAA",
						"type": "String"
					},
					{
						"name": "10000",
						"type": "String"
					},
					{
						"name": "10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inv_Copy_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File_Path": {
						"type": "string"
					},
					"File_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File_Name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().File_Path",
							"type": "Expression"
						},
						"container": "inventory-datawerehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inv_OracleTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema_Name": {
						"type": "string"
					},
					"Table_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema_Name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Oracle1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "drivers.json",
						"container": "source-container"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"driverId": {
							"type": "integer"
						},
						"driverRef": {
							"type": "string"
						},
						"number": {
							"type": "null"
						},
						"code": {
							"type": "string"
						},
						"name": {
							"type": "object",
							"properties": {
								"forename": {
									"type": "string"
								},
								"surname": {
									"type": "string"
								}
							}
						},
						"dob": {
							"type": "string"
						},
						"nationality": {
							"type": "string"
						},
						"url": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetaFolderTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Source_CSV",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "HR",
					"table": "EMPLOYEES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Oracle1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('OutFile',formatdatetime(utcnow(),'yyyyMMddHHmmss'),'.txt')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('ASQL/SalesLT/Address/',formatdatetime(utcnow(),'yyyy'),'/',formatdatetime(utcnow(),'MM'),'/',formatdatetime(utcnow(),'dd'))",
							"type": "Expression"
						},
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Out_Copy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"PipelineName": {
						"type": "string"
					},
					"OutFile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().OutFile",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().PipelineName",
							"type": "Expression"
						},
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Out_CsvForEachCopy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TFile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().TFile",
							"type": "Expression"
						},
						"folderPath": "Meta_For_Each",
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Out_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Address_out.csv",
						"folderPath": {
							"value": "@concat('ASQL/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'))",
							"type": "Expression"
						},
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Out_csv_bkp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('BKUP_Address_',formatdatetime(utcnow(),'ddHHmmss'),'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Backup/ASQL/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'))",
							"type": "Expression"
						},
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Read_From_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegion",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SP_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SRC_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().SRC_file",
							"type": "Expression"
						},
						"folderPath": "Source_CSV",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlSalesLT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Address"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestFileFlatten')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Test_File.csv",
						"folderPath": "TestDataFile",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Subjects",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestLocation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TestFile.csv",
						"folderPath": "TestInput_Folder",
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Sal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TNAME",
						"type": "varchar"
					},
					{
						"name": "TSAL",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TEST_LOAD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UC_CopyTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Source_Folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Source_Folder",
							"type": "Expression"
						},
						"container": "source-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UC_Paste')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Dest_Folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Dest_Folder",
							"type": "Expression"
						},
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AddressID",
						"type": "String"
					},
					{
						"name": "AddressLine1",
						"type": "String"
					},
					{
						"name": "AddressLine2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "StateProvince",
						"type": "String"
					},
					{
						"name": "CountryRegion",
						"type": "String"
					},
					{
						"name": "PostalCode",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnZipTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UnzippedFiles",
						"container": "destination-container"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Userid')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test.csv",
						"folderPath": "Source_CSV",
						"container": "source-container"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-7142252874940606.6.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "ADB-AccessKey"
					},
					"existingClusterId": "0104-044115-99bkqobb"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-7142252874940606.6.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "ADB-AccessKey"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1:6",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "9.1.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-7142252874940606.6.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/c33cc9bf-fbce-404a-bc75-943789884ffb/resourceGroups/RG-Deba/providers/Microsoft.Databricks/workspaces/MyfirstADB",
					"existingClusterId": "0104-044115-99bkqobb"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Destination_connection_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('Oracle1_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "IR-Oracle-KeyValue",
						"secretVersion": "e3ffdec0940541daaed0908e6a183eff"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('source_connection_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger7AM')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_INV_OLTP_to_ADLS",
							"type": "PipelineReference"
						},
						"parameters": {
							"OLTP_DB_Name": "[parameters('Trigger7AM_properties_PL_INV_OLTP_to_ADLS_parameters_OLTP_DB_Name')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-12-10T16:29:00",
						"endTime": "2021-12-31T16:29:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_INV_OLTP_to_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_Storage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"Storage_Trigger"
				],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_TEST_Trigger",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/trigger-storage/blobs/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('Trigger_Storage_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TEST_Trigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Join')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Input_Source",
								"type": "DatasetReference"
							},
							"name": "EmpData"
						},
						{
							"dataset": {
								"referenceName": "Input_Source",
								"type": "DatasetReference"
							},
							"name": "DeptData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Emp_Dest",
								"type": "DatasetReference"
							},
							"name": "Destination"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "source(output(\n\t\tEID as short,\n\t\tENAME as string,\n\t\tSAL as integer,\n\t\tDID as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EmpData\nsource(output(\n\t\tDID as short,\n\t\tDNAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DeptData\nEmpData, DeptData join(EmpData@DID == DeptData@DID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 sort(asc(EID, true)) ~> Sort1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEmployeeID as string,\n\t\tEmployeeName as string,\n\t\tEmployeeSalary as string,\n\t\tEmployeeDepartment as string\n\t),\n\tpartitionFileNames:[(concat(\"EmpFullData\", replace(toString(currentTimestamp()),':','-'),\".csv\"))],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tEmployeeID = EID,\n\t\tEmployeeName = ENAME,\n\t\tEmployeeSalary = SAL,\n\t\tEmployeeDepartment = DNAME\n\t),\n\tpartitionBy('hash', 1)) ~> Destination"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Input_Source')]",
				"[concat(variables('factoryId'), '/datasets/Emp_Dest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TestLocation",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TestSQL",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Aggregate1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tID as string,\n\t\tName as string,\n\t\tSal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 aggregate(groupBy(ID,\n\t\tName,\n\t\tSal),\n\tCount = count('1')) ~> Aggregate1\nAggregate1 select(mapColumn(\n\t\tID,\n\t\tName,\n\t\tSal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tTID as integer,\n\t\tTNAME as string,\n\t\tTSAL as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tTID = ID,\n\t\tTNAME = Name,\n\t\tTSAL = Sal\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TestLocation')]",
				"[concat(variables('factoryId'), '/datasets/TestSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Upsert_Using DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EmpSRCDB",
								"type": "DatasetReference"
							},
							"name": "empsrc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "EmpTGTDB",
								"type": "DatasetReference"
							},
							"name": "emptgt"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tECD as integer,\n\t\tENAME as string,\n\t\tSAL as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> empsrc\nempsrc alterRow(upsertIf(2==2)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tECD as integer,\n\t\tENAME as string,\n\t\tSAL as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ECD'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tECD,\n\t\tENAME,\n\t\tSAL\n\t)) ~> emptgt"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EmpSRCDB')]",
				"[concat(variables('factoryId'), '/datasets/EmpTGTDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/credential1')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/c33cc9bf-fbce-404a-bc75-943789884ffb/resourceGroups/RG-Deba/providers/Microsoft.ManagedIdentity/userAssignedIdentities/assigneduser"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_XML_to_Parquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "practiceXMLinput",
									"wildcardFileName": "Product.xml",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['root']['Source_Data'][0]['Product']"
										},
										"sink": {
											"name": "Product"
										}
									},
									{
										"source": {
											"path": "$['root']['Source_Data'][0]['Customer']"
										},
										"sink": {
											"name": "Customer"
										}
									},
									{
										"source": {
											"path": "$['root']['Source_Data'][0]['Qtr_2']"
										},
										"sink": {
											"name": "Qtr_2"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Xml1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "practiceXMLinput",
									"wildcardFileName": "Product.xml",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "Xml1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Xml1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Xml1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Xml1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Product.xml",
						"folderPath": "practiceXMLinput",
						"container": "source-container"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Destination_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "practiceParquetSink",
						"container": "destination-container"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Destination_connection')]"
			]
		}
	]
}