{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "demoadf1991"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_UseCase1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MetaData_Inbound",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Inbound_Location",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach_Child",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "MetaData_Inbound",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('MetaData_Inbound').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Append_Array",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Date_Array",
										"value": {
											"value": "@int(substring(item().name,4,8))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set_DateArray",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach_Child",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Disp_Date_Array",
							"value": {
								"value": "@variables('Date_Array')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set_Max_Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set_DateArray",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Max_Date",
							"value": {
								"value": "@string(max(variables('Date_Array')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy2Dest",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set_Max_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InCopy",
								"type": "DatasetReference",
								"parameters": {
									"InFile": {
										"value": "@concat('EMP_',variables('Max_Date'),'.csv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Out_Copy",
								"type": "DatasetReference",
								"parameters": {
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"OutFile": {
										"value": "@concat('EMP_DT',variables('Max_Date'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Date_Array": {
						"type": "Array"
					},
					"Max_Date": {
						"type": "String"
					},
					"Disp_Date_Array": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_excel2DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyToTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [New_Table].[Financial]",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_excel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Query_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OutTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Set_Var_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy data1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Target",
							"value": "xyz.csv"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_ForEachCopy",
								"type": "DatasetReference",
								"parameters": {
									"SFile": {
										"value": "@variables('Source')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Out_CsvForEachCopy",
								"type": "DatasetReference",
								"parameters": {
									"TFile": {
										"value": "@variables('Target')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_ForEachCopy",
								"type": "DatasetReference",
								"parameters": {
									"SFile": {
										"value": "@variables('Source')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Out_CsvForEachCopy",
								"type": "DatasetReference",
								"parameters": {
									"TFile": {
										"value": "@variables('Target')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Source": {
						"type": "String",
						"defaultValue": "username-password-recovery-code.csv"
					},
					"Target": {
						"type": "String",
						"defaultValue": "abc.csv"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "Destination_connection",
										"type": "LinkedServiceReference"
									},
									"path": "destination-container/TestLog"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['driverId']"
										},
										"sink": {
											"name": "driverId"
										}
									},
									{
										"source": {
											"path": "$['driverRef']"
										},
										"sink": {
											"name": "driverRef"
										}
									},
									{
										"source": {
											"path": "$['number']"
										},
										"sink": {
											"name": "number"
										}
									},
									{
										"source": {
											"path": "$['code']"
										},
										"sink": {
											"name": "code"
										}
									},
									{
										"source": {
											"path": "$['name']['forename']"
										},
										"sink": {
											"name": "forename"
										}
									},
									{
										"source": {
											"path": "$['name']['surname']"
										},
										"sink": {
											"name": "surname"
										}
									},
									{
										"source": {
											"path": "$['dob']"
										},
										"sink": {
											"name": "dob"
										}
									},
									{
										"source": {
											"path": "$['nationality']"
										},
										"sink": {
											"name": "nationality"
										}
									},
									{
										"source": {
											"path": "$['url']"
										},
										"sink": {
											"name": "url"
										}
									}
								],
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Table_Metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Det_Table_Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Read_From_Table",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.Schema_Name",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							]
						}
					},
					{
						"name": "IF Exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Det_Table_Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Det_Table_Metadata').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyTable",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Read_From_Table",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@pipeline().parameters.Schema_Name",
													"type": "Expression"
												},
												"TableName": {
													"value": "@pipeline().parameters.Table_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Destination_DataSet",
											"type": "DatasetReference",
											"parameters": {
												"Dest_Name": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"DestFileName": {
													"value": "@concat(pipeline().parameters.Schema_Name,pipeline().parameters.Table_Name,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Schema_Name": {
						"type": "string",
						"defaultValue": "SalesLT"
					},
					"Table_Name": {
						"type": "string",
						"defaultValue": "Address"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/excel2DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyToTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [New_Table].[Financial]",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "Destination_connection",
										"type": "LinkedServiceReference"
									},
									"path": "destination-container/ErrorLog"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_excel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-20T10:35:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "username",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "username",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " uid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "uid",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "fname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "lname",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Userid",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTableUserId",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\tDELETE FROM USER_ID WHERE UNIQUR_ID IN (\n\tSELECT UNIQUR_ID FROM\t\n\t\t(SELECT username,uid,fname,lname,UNIQUR_ID, ROW_NUMBER() OVER(PARTITION BY username,uid,fname,lname ORDER BY UID) AS RNUM\n\t\t\tFROM USER_ID ) AS TAB1 WHERE RNUM > 1);\nSELECT 1 FROM USER_ID ;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-13T12:20:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_dest_conn')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "In_excel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Out_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-14T11:49:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inv_OracleTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema_Name": {
						"type": "string"
					},
					"Table_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema_Name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "HR",
					"table": "EMPLOYEES"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Join')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Input_Source",
								"type": "DatasetReference"
							},
							"name": "EmpData"
						},
						{
							"dataset": {
								"referenceName": "Input_Source",
								"type": "DatasetReference"
							},
							"name": "DeptData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Emp_Dest",
								"type": "DatasetReference"
							},
							"name": "Destination"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "source(output(\n\t\tEID as short,\n\t\tENAME as string,\n\t\tSAL as integer,\n\t\tDID as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EmpData\nsource(output(\n\t\tDID as short,\n\t\tDNAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DeptData\nEmpData, DeptData join(EmpData@DID == DeptData@DID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 sort(asc(EID, true)) ~> Sort1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEmployeeID as string,\n\t\tEmployeeName as string,\n\t\tEmployeeSalary as string,\n\t\tEmployeeDepartment as string\n\t),\n\tpartitionFileNames:[(concat(\"EmpFullData\", replace(toString(currentTimestamp()),':','-'),\".csv\"))],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tEmployeeID = EID,\n\t\tEmployeeName = ENAME,\n\t\tEmployeeSalary = SAL,\n\t\tEmployeeDepartment = DNAME\n\t),\n\tpartitionBy('hash', 1)) ~> Destination"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TestLocation",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TestSQL",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Aggregate1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tID as string,\n\t\tName as string,\n\t\tSal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 aggregate(groupBy(ID,\n\t\tName,\n\t\tSal),\n\tCount = count('1')) ~> Aggregate1\nAggregate1 select(mapColumn(\n\t\tID,\n\t\tName,\n\t\tSal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tTID as integer,\n\t\tTNAME as string,\n\t\tTSAL as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tTID = ID,\n\t\tTNAME = Name,\n\t\tTSAL = Sal\n\t)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Upsert_Using DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EmpSRCDB",
								"type": "DatasetReference"
							},
							"name": "empsrc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "EmpTGTDB",
								"type": "DatasetReference"
							},
							"name": "emptgt"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tECD as integer,\n\t\tENAME as string,\n\t\tSAL as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> empsrc\nempsrc alterRow(upsertIf(2==2)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tECD as integer,\n\t\tENAME as string,\n\t\tSAL as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ECD'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tECD,\n\t\tENAME,\n\t\tSAL\n\t)) ~> emptgt"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_XML_to_Parquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "practiceXMLinput",
									"wildcardFileName": "Product.xml",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['root']['Source_Data'][0]['Product']"
										},
										"sink": {
											"name": "Product"
										}
									},
									{
										"source": {
											"path": "$['root']['Source_Data'][0]['Customer']"
										},
										"sink": {
											"name": "Customer"
										}
									},
									{
										"source": {
											"path": "$['root']['Source_Data'][0]['Qtr_2']"
										},
										"sink": {
											"name": "Qtr_2"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Xml1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "practiceXMLinput",
									"wildcardFileName": "P1roduct.xml",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "Xml1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Xml1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowJoin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Join",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmpData": {
										"InputFileName": "EmployeeData"
									},
									"DeptData": {
										"InputFileName": "DepartmentData"
									},
									"Destination": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-26T08:25:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_Join')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowUpsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Upsert_Using DF",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Upsert_Using DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empsrc": {
										"Schema_Name": "dbo",
										"Table_Name": "EMP_SRC"
									},
									"emptgt": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-18T14:32:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Upsert_Using DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INV_OLTP_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unload_ProductTable",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.OLTP_DB_Name,variables('Product'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Product_Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Inv_OracleTable",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Name": {
													"value": "@variables('Schema_Name')",
													"type": "Expression"
												},
												"Table_Name": {
													"value": "@concat(variables('Product'),'_DETAILS')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Inv_Copy_Table",
											"type": "DatasetReference",
											"parameters": {
												"File_Path": {
													"value": "@concat(pipeline().globalParameters.Folder_Path_Global,\n                variables('Product'),'/',\n                formatDateTime(utcnow(),'yyyy'),'/',\n                formatDateTime(utcnow(),'MM'),'/',\n                formatDateTime(utcnow(),'dd'),'/')",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@concat(variables('Product'),\n               formatDateTime(utcnow(),'HHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Unload_VendorTable",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Unload_ProductTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.OLTP_DB_Name,variables('Vendor'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Vendor_Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Inv_OracleTable",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Name": {
													"value": "@variables('Schema_Name')",
													"type": "Expression"
												},
												"Table_Name": {
													"value": "@concat(variables('Vendor'),'_DETAILS')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Inv_Copy_Table",
											"type": "DatasetReference",
											"parameters": {
												"File_Path": {
													"value": "@concat(pipeline().globalParameters.Folder_Path_Global,\n                variables('Vendor'),'/',\n                formatDateTime(utcnow(),'yyyy'),'/',\n                formatDateTime(utcnow(),'MM'),'/',\n                formatDateTime(utcnow(),'dd'),'/')",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@concat(variables('Vendor'),\n               formatDateTime(utcnow(),'HHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Unload_WarehouseTable",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Unload_VendorTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.OLTP_DB_Name,variables('Warehouse'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Warehouse_Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Inv_OracleTable",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Name": {
													"value": "@variables('Schema_Name')",
													"type": "Expression"
												},
												"Table_Name": {
													"value": "@concat(variables('Warehouse'),'_DETAILS')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Inv_Copy_Table",
											"type": "DatasetReference",
											"parameters": {
												"File_Path": {
													"value": "@concat(pipeline().globalParameters.Folder_Path_Global,\n                variables('Warehouse'),'/',\n                formatDateTime(utcnow(),'yyyy'),'/',\n                formatDateTime(utcnow(),'MM'),'/',\n                formatDateTime(utcnow(),'dd'),'/')",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@concat(variables('Warehouse'),\n               formatDateTime(utcnow(),'HHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Unload_Inv_Fact",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Unload_WarehouseTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.OLTP_DB_Name,variables('Inventory'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Inv_Fact",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Inv_OracleTable",
											"type": "DatasetReference",
											"parameters": {
												"Schema_Name": {
													"value": "@variables('Schema_Name')",
													"type": "Expression"
												},
												"Table_Name": {
													"value": "@concat(variables('Inventory'),'_FACT')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Inv_Copy_Table",
											"type": "DatasetReference",
											"parameters": {
												"File_Path": {
													"value": "@concat(pipeline().globalParameters.Folder_Path_Global,\n                variables('Inventory'),'/',\n                formatDateTime(utcnow(),'yyyy'),'/',\n                formatDateTime(utcnow(),'MM'),'/',\n                formatDateTime(utcnow(),'dd'),'/')",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@concat(variables('Inventory'),\n               formatDateTime(utcnow(),'HHmmss'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OLTP_DB_Name": {
						"type": "array",
						"defaultValue": []
					}
				},
				"variables": {
					"Product": {
						"type": "String",
						"defaultValue": "PRODUCT"
					},
					"Vendor": {
						"type": "String",
						"defaultValue": "VENDOR"
					},
					"Warehouse": {
						"type": "String",
						"defaultValue": "WAREHOUSE"
					},
					"Schema_Name": {
						"type": "String",
						"defaultValue": "HR"
					},
					"Inventory": {
						"type": "String",
						"defaultValue": "INVENTORY"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-10T17:06:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Inv_OracleTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORACLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "OracleTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Lookup1').output.count,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ora2Blob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "OracleTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Destination_DataSet",
											"type": "DatasetReference",
											"parameters": {
												"Dest_Name": {
													"value": "@concat(pipeline().Pipeline,'/',\n                formatdatetime(utcnow(),'yyyy'),'/',\n                formatdatetime(utcnow(),'MM'),'/',\n                formatdatetime(utcnow(),'dd'))\n",
													"type": "Expression"
												},
												"DestFileName": {
													"value": "@concat('Output_T',\n                formatdatetime(utcnow(),'hhmmss'),\n                '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-16T04:13:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OracleTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Test_DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-22T08:36:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Test_DF')]"
			]
		}
	]
}